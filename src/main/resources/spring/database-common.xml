<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">

    <context:property-placeholder location="classpath*:jdbc.properties"/>
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
          init-method="init" destroy-method="close">
        <property name="driverClassName" value="${jdbc_driverClassName}"/>
        <property name="url" value="${jdbc_url}"/>
        <property name="username" value="${jdbc_username}"/>
        <property name="password" value="${jdbc_password}"/>
        <!-- 连接池启动时的初始值 -->
        <property name="initialSize" value="10"/>
        <property name="connectionProperties" value="oracle.jdbc.ReadTimeout=180000"/>
        <!--最大激活连接数，设为0表示无限制-->
        <property name="maxActive" value="50"/>
        <!--最大的空闲连接数。设为0表示无限制-->
        <!--<property name="maxIdle" value="15" />--><!-- druid不支持这种配置 -->
        <!--最小空闲值.当空闲的连接数少于阀值时，连接池就会预申请去一些连接-->
        <property name="minIdle" value="10"/>
        <!-- 最大建立连接等待时间（以毫秒为单位）。如果超过此时间将接到异常。设为－1表示无限制。 -->
        <property name="maxWait" value="15000"/>
        <!-- 给出一条简单的sql语句进行验证 -->
        <property name="validationQuery" value="select 1 from dual"/>
        <!-- 指明是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个 -->
        <property name="testOnBorrow" value="true"/>
        <!-- 指明是否在归还到池中前进行检验 -->
        <property name="testOnReturn" value="false"/>
        <!-- 指明连接是否被空闲连接回收器(如果有)进行检验.如果检测失败,则连接将被从池中去除 -->
        <property name="testWhileIdle" value="true"/>
        <!-- 是否自动回收超时连接 -->
        <property name="removeAbandoned" value="true"/>
        <!-- 数据库连接过多长时间不用将被视为被遗弃而收回连接池中(以秒数为单位) 。 -->
        <property name="removeAbandonedTimeout" value="180"/>
        <!-- 是否在自动回收超时连接的时候打印连接的超时错误 -->
        <property name="logAbandoned" value="true"/>
        <!-- 运行判断连接超时任务的时间间隔，单位为毫秒，默认为-1，即不执行任务。 -->
        <property name="timeBetweenEvictionRunsMillis" value="15000"/>
        <!-- 在每次空闲连接回收器线程(如果有)运行时检查的连接数量 -->
        <!--<property name="numTestsPerEvictionRun" value="10" /> --><!-- druid不支持这种配置 -->
        <!-- #连接的超时时间，单位为毫秒，默认为半小时 -->
        <property name="minEvictableIdleTimeMillis" value="1800000"/>
        <!-- <property name="filters" value="stat,wall" /> --><!-- 正式环境不启用，开发测试可以启用 -->
    </bean>

    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations">
            <list>
                <value>classpath*:mapper/*.xml</value>
            </list>
        </property>
        <property name="configLocation" value="classpath:spring/mybatis-config.xml"/>
    </bean>

    <bean id="mybatisDAO" class="cn.xiaoshuwo.www.dao.MybatisDAO">
        <property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
    </bean>
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager"/>

</beans>